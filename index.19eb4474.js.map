{"mappings":"AAEA,MAAMA,EAAKC,SAASC,eAAe,cAC7BC,EAAQF,SAASC,eAAe,SAChCE,EAAUH,SAASC,eAAe,WAGlCG,GAFkBJ,SAASC,eAAe,SACjCD,SAASK,iBAAiB,UACvBL,SAASM,cAAc,qBACnCC,EAAYP,SAASM,cAAc,oBACnCE,EAAaR,SAASM,cAAc,qBACpCG,EAAYT,SAASM,cAAc,oBAGnCI,EAAY,CAChBC,UAAU,EACVC,QAAS,EACTC,gBAAiB,EACjBC,WAAY,IAoDd,SAASC,IACP,MAAMD,WAAEA,EAAYF,QAAAI,EAAOL,SAAEA,EAAUE,gBAAiBI,GAAUP,EAE5DQ,EAAQD,EAAQ,EAEtB,IAAIE,EAAS,GACTC,EAAgB,GAChBC,EAAM,sDACNC,EAAgB,EAGpB,MAAMC,EAAqBP,EAAUC,EAC/BO,EAAsBR,EAAUC,EAEtC,IAAIQ,EAAS,GACb,IAAK,IAAIC,EAAM,EAAGA,GAAOZ,EAAYY,IACnCD,EAASC,IAAQV,EAAU,SAAW,GAGlCF,GAAc,EAAII,EAAQ,GAAKP,EAC7BY,EAAqB,GAAKC,EAAsBV,EAAa,EAAI,EAE/DY,GAAOH,GAAsBG,GAAOF,IACtCJ,GAAiBO,EAAWD,EAAKD,IAKjCT,EAAWE,GAASQ,GAAOR,GAC1BF,EAAUF,EAAaI,GAASQ,GAAOZ,EAAaI,EAAQ,GAC7DQ,IAAQZ,GACA,IAARY,EAEAP,GAAUQ,EAAWD,EAAKD,IAE1BH,IACsB,IAAlBA,IAAqBH,GAAUE,IAKvCF,GAAUQ,EAAWD,EAAKD,GAI1BL,GACFA,EACEO,EAAW,GAAKN,EAAMD,EAAgBC,EAAMM,EAAWb,GACzDf,EAAG6B,UAAYR,GAEfrB,EAAG6B,UAAYT,C,CAInB,SAASQ,EAAWE,EAAOJ,EAAS,IAClC,MAAO,uBAAuBA,iBAAsBI,4CAChBA,kB,CAyDtC,SAASC,IACmB,IAAtBpB,EAAUE,SACZL,EAAUwB,UAAW,EACrBvB,EAAWuB,UAAW,IAEtBxB,EAAUwB,UAAW,EACrBvB,EAAWuB,UAAW,E,CAG1B,SAASC,IACHtB,EAAUE,UAAYF,EAAUI,YAClCmB,QAAQC,IAAIxB,EAAUE,SACtBR,EAAU2B,UAAW,EACrBtB,EAAUsB,UAAW,IAErB3B,EAAU2B,UAAW,EACrBtB,EAAUsB,UAAW,E,CAnLzBhB,IAEAhB,EAAGoC,QAAUC,IAGX,GAFYA,EAAEC,OAENC,QAAQC,KAAM,CACpB,MAAMC,EAAaC,SAASL,EAAEC,OAAOC,QAAQC,KAAM,IAEnD7B,EAAUE,QAAU4B,EACpBrC,EAAQuC,MAAQF,EAChBzB,IAEAe,IACAE,G,GAgIJhC,SAASM,cAAc,mBAAmB6B,QAAU,SAAUC,IAI9D,SAAsBO,GAChBA,EAAQC,UAAUC,SAAS,cAC7BnC,EAAUE,QAAU,EACX+B,EAAQC,UAAUC,SAAS,aACpCnC,EAAUE,QAAU6B,SAASvC,EAAMwC,MAAO,IACjCC,EAAQC,UAAUC,SAAS,cACpCnC,EAAUE,UACVkB,IACA1B,EAAU2B,UAAW,EACrBtB,EAAUsB,UAAW,GACZY,EAAQC,UAAUC,SAAS,eACpCnC,EAAUE,UACVoB,IACAzB,EAAUwB,UAAW,EACrBvB,EAAWuB,UAAW,GAExBhB,G,CAnBA+B,CAAaV,EAAEC,O","sources":["src/index.js"],"sourcesContent":["import './style.css';\n\nconst pg = document.getElementById('pagination');\nconst pages = document.getElementById('pages');\nconst curPage = document.getElementById('curpage');\nconst numLinksTwoSide = document.getElementById('delta');\nconst checks = document.querySelectorAll('.check');\nconst btnNextPg = document.querySelector('button.next-page');\nconst btnPrevPg = document.querySelector('button.prev-page');\nconst btnFirstPg = document.querySelector('button.first-page');\nconst btnLastPg = document.querySelector('button.last-page');\n// when page load\n// curPage.setAttribute('max', pages.value);\nconst valuePage = {\n  truncate: true,\n  curPage: 1,\n  numLinksTwoSide: 1,\n  totalPages: 10,\n};\npagination();\n\npg.onclick = e => {\n  const ele = e.target;\n\n  if (ele.dataset.page) {\n    const pageNumber = parseInt(e.target.dataset.page, 10);\n\n    valuePage.curPage = pageNumber;\n    curPage.value = pageNumber;\n    pagination(valuePage);\n\n    handleButtonLeft();\n    handleButtonRight();\n  }\n};\n\n// pages.onchange = () => {\n//   valuePage.totalPages = parseInt(pages.value, 10);\n//   handleCheckTruncate();\n//   handleCurPage();\n//   pagination();\n//   handleButtonLeft();\n//   handleButtonRight();\n// };\n// curPage.onchange = () => {\n//   handleCurPage();\n//   pagination();\n//   handleButtonLeft();\n//   handleButtonRight();\n// };\n// numLinksTwoSide.onchange = function () {\n//   if (this.value > 5) {\n//     this.value = 1;\n//     valuePage.numLinksTwoSide = 1;\n//   } else {\n//     valuePage.numLinksTwoSide = parseInt(this.value, 10);\n//   }\n//   pagination();\n// };\n\n// checks.forEach((check) => {\n//   check.onclick = (e) => {\n//     console.log(e.target);\n//     handleCheckTruncate();\n//     pagination();\n//   };\n// });\n\n// DYNAMIC PAGINATION\nfunction pagination() {\n  const { totalPages, curPage, truncate, numLinksTwoSide: delta } = valuePage;\n\n  const range = delta + 4; // use for handle visible number of links left side\n\n  let render = '';\n  let renderTwoSide = '';\n  let dot = `<li class=\"pg-item\"><a class=\"pg-link\">...</a></li>`;\n  let countTruncate = 0; // use for ellipsis - truncate left side or right side\n\n  // use for truncate two side\n  const numberTruncateLeft = curPage - delta;\n  const numberTruncateRight = curPage + delta;\n\n  let active = '';\n  for (let pos = 1; pos <= totalPages; pos++) {\n    active = pos === curPage ? 'active' : '';\n\n    // truncate\n    if (totalPages >= 2 * range - 1 && truncate) {\n      if (numberTruncateLeft > 3 && numberTruncateRight < totalPages - 3 + 1) {\n        // truncate 2 side\n        if (pos >= numberTruncateLeft && pos <= numberTruncateRight) {\n          renderTwoSide += renderPage(pos, active);\n        }\n      } else {\n        // truncate left side or right side\n        if (\n          (curPage < range && pos <= range) ||\n          (curPage > totalPages - range && pos >= totalPages - range + 1) ||\n          pos === totalPages ||\n          pos === 1\n        ) {\n          render += renderPage(pos, active);\n        } else {\n          countTruncate++;\n          if (countTruncate === 1) render += dot;\n        }\n      }\n    } else {\n      // not truncate\n      render += renderPage(pos, active);\n    }\n  }\n\n  if (renderTwoSide) {\n    renderTwoSide =\n      renderPage(1) + dot + renderTwoSide + dot + renderPage(totalPages);\n    pg.innerHTML = renderTwoSide;\n  } else {\n    pg.innerHTML = render;\n  }\n}\n\nfunction renderPage(index, active = '') {\n  return ` <li class=\"pg-item ${active}\" data-page=\"${index}\">\n        <a class=\"pg-link\" href=\"#\">${index}</a>\n    </li>`;\n}\nfunction handleCurPage() {\n  if (+curPage.value > pages.value) {\n    curPage.value = 1;\n    valuePage.curPage = 1;\n  } else {\n    valuePage.curPage = parseInt(curPage.value, 10);\n  }\n}\nfunction handleCheckTruncate() {\n  const truncate = document.querySelector('input[type=radio]:checked');\n\n  if (truncate.id === 'enable') {\n    valuePage.truncate = true;\n  } else {\n    if (pages.value > 1000) {\n      let isTruncate = confirm(\n        `Are you sure you want to render all the links? number of pages: ${pages.value}`\n      );\n      // true => disable truncate\n      if (isTruncate) {\n        valuePage.truncate = false;\n      } else {\n        valuePage.truncate = true;\n        truncate.removeAttribute('checked');\n        document.getElementById('enable').checked = true;\n      }\n    } else {\n      valuePage.truncate = false;\n    }\n  }\n}\n\ndocument.querySelector('.page-container').onclick = function (e) {\n  handleButton(e.target);\n};\n\nfunction handleButton(element) {\n  if (element.classList.contains('first-page')) {\n    valuePage.curPage = 1;\n  } else if (element.classList.contains('last-page')) {\n    valuePage.curPage = parseInt(pages.value, 10);\n  } else if (element.classList.contains('prev-page')) {\n    valuePage.curPage--;\n    handleButtonLeft();\n    btnNextPg.disabled = false;\n    btnLastPg.disabled = false;\n  } else if (element.classList.contains('next-page')) {\n    valuePage.curPage++;\n    handleButtonRight();\n    btnPrevPg.disabled = false;\n    btnFirstPg.disabled = false;\n  }\n  pagination();\n}\nfunction handleButtonLeft() {\n  if (valuePage.curPage === 1) {\n    btnPrevPg.disabled = true;\n    btnFirstPg.disabled = true;\n  } else {\n    btnPrevPg.disabled = false;\n    btnFirstPg.disabled = false;\n  }\n}\nfunction handleButtonRight() {\n  if (valuePage.curPage === valuePage.totalPages) {\n    console.log(valuePage.curPage);\n    btnNextPg.disabled = true;\n    btnLastPg.disabled = true;\n  } else {\n    btnNextPg.disabled = false;\n    btnLastPg.disabled = false;\n  }\n}\n"],"names":["$1f0dc3b9307be026$var$pg","document","getElementById","$1f0dc3b9307be026$var$pages","$1f0dc3b9307be026$var$curPage","$1f0dc3b9307be026$var$btnNextPg","querySelectorAll","querySelector","$1f0dc3b9307be026$var$btnPrevPg","$1f0dc3b9307be026$var$btnFirstPg","$1f0dc3b9307be026$var$btnLastPg","$1f0dc3b9307be026$var$valuePage","truncate","curPage","numLinksTwoSide","totalPages","$1f0dc3b9307be026$var$pagination","curPage1","delta","range","render","renderTwoSide","dot","countTruncate","numberTruncateLeft","numberTruncateRight","active","pos","$1f0dc3b9307be026$var$renderPage","innerHTML","index","$1f0dc3b9307be026$var$handleButtonLeft","disabled","$1f0dc3b9307be026$var$handleButtonRight","console","log","onclick","e","target","dataset","page","pageNumber","parseInt","value","element","classList","contains","$1f0dc3b9307be026$var$handleButton"],"version":3,"file":"index.19eb4474.js.map"}